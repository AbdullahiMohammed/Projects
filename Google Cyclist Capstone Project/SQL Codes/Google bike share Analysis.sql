--CHECK FOR DUPLICATES
SELECT RIDE_ID, COUNT(RIDE_ID) FROM bike_share.DBO.allrides
GROUP BY ride_id
ORDER BY COUNT(RIDE_ID) DESC

--SUMMARY STATISTICS
select top 5 * from bike_share.dbo.allrides
--COUNT OF TOTAL RIDES
SELECT COUNT(*) AS NUM_RIDES FROM bike_share.dbo.allrides

--AVERAGE TRIP LENGHT
SELECT AVG(trip_len) AVERAGE_TRIP_LEN FROM bike_share.dbo.allrides

--MAXIMUM TRIP LENGHT
SELECT MAX(trip_len)/60 MAX_TRIP_LEN FROM bike_share.dbo.allrides

--MINIMUM TRIP LENGHT
SELECT MIN(trip_len) MIN_TRIP_LEN FROM bike_share.dbo.allrides

--========================================================================
--ANALYSIS OF BIKE SHARE DATA

--AMOUNT OF RIDES BY ROUTE
SELECT top 25 route as Route, count(*) as NUM_RIDES from bike_share.dbo.allrides
GROUP BY route
ORDER BY NUM_RIDES DESC

-- WHAT TRIP HAD THE LONGEST DURATION
SELECT * FROM bike_share.DBO.allrides
WHERE trip_len = (SELECT MAX(trip_len) FROM bike_share.DBO.allrides)

--MOST POPULAR RIDE TYPE
SELECT  rideable_type, COUNT(ride_id) NUM_RIDES FROM bike_share.DBO.allrides
GROUP BY rideable_type
ORDER BY NUM_RIDES DESC

--MOST POPULAR RIDE TYPE BY MEMBERSHIP TYPE
SELECT member_casual, rideable_type, COUNT(ride_id) NUM_RIDES FROM bike_share.DBO.allrides
GROUP BY member_casual, rideable_type
ORDER BY NUM_RIDES DESC

--AVERAGE TRIP DURATION BY MEMBERSHIP TYPE
SELECT member_casual MEMBERSHIP_TYPE, AVG(TRIP_LEN) AVG_TRIP_LEN FROM bike_share.DBO.allrides
GROUP BY member_casual
ORDER BY AVG_TRIP_LEN DESC

--AVERAGE TRIP DURATION BY RIDE TYPE
SELECT rideable_type RIDE_TYPE, AVG(TRIP_LEN) AVG_TRIP_LEN FROM bike_share.DBO.allrides
GROUP BY rideable_type
ORDER BY AVG_TRIP_LEN DESC

--AVERAGE TRIP DURATION BY RIDE TYPE AND MEMBERSHIP TYPE
SELECT MEMBER_CASUAL MEMBERSHIP_TYPE, rideable_type RIDE_TYPE, AVG(TRIP_LEN) AVG_TRIP_LEN FROM bike_share.DBO.allrides
GROUP BY member_casual, rideable_type
ORDER BY AVG_TRIP_LEN DESC

--MOST POPULAR MEMBER TYPES FOR ROUTES
WITH ROUTE_RANK AS(
SELECT ROUTE, MEMBER_CASUAL, COUNT(*) NUM_RIDES, ROW_NUMBER() OVER(PARTITION BY ROUTE ORDER BY COUNT(MEMBER_CASUAL)) ROW_NUM
FROM bike_share.DBO.allrides
GROUP BY ROUTE, member_casual)

SELECT route, member_casual MEMBERSHIP_TYPE, NUM_RIDES, ROW_NUM FROM ROUTE_RANK
where ROW_NUM = 2
ORDER BY NUM_RIDES DESC, route 

--NUMBER OF STATIONS BY MOST POPULAR MEMBERSHIP TYPE
WITH ROUTE_RANK AS(
SELECT ROUTE, MEMBER_CASUAL, COUNT(*) NUM_RIDES, ROW_NUMBER() OVER(PARTITION BY ROUTE ORDER BY COUNT(MEMBER_CASUAL)) ROW_NUM
FROM bike_share.DBO.allrides
GROUP BY ROUTE, member_casual),
MEMBER_GROUPED AS(
SELECT route, member_casual MEMBERSHIP_TYPE, NUM_RIDES, ROW_NUM FROM ROUTE_RANK
where ROW_NUM = 2)

SELECT MEMBERSHIP_TYPE, COUNT(*) FROM MEMBER_GROUPED
GROUP BY MEMBERSHIP_TYPE
ORDER BY COUNT(*) DESC

--AMOUNT OF TRIPS BY WEEKDAY
SELECT DATENAME(WEEKDAY, WEEKDAY) AS WEEKDAY, COUNT(RIDE_ID) NUM_RIDES FROM bike_share.DBO.allrides
GROUP BY WeekDay
ORDER BY NUM_RIDES

--AMOUNT OF TRIPS BY WEEKDAY AND RIDE TYPE
SELECT  RIDEABLE_TYPE AS RIDE_TYPE ,  DATENAME(WEEKDAY, WEEKDAY) AS WEEKDAY, COUNT(RIDE_ID) NUM_RIDES FROM bike_share.DBO.allrides
GROUP BY  rideable_type, WeekDay
ORDER BY NUM_RIDES DESC


--AMOUNT OF TRIPS BY WEEKDAY AND RIDE TYPE AND MEMBER TYPE
SELECT MEMBER_CASUAL MEMBERSHIP_TYPE,  RIDEABLE_TYPE AS RIDE_TYPE ,  DATENAME(WEEKDAY, WEEKDAY) AS WEEKDAY, COUNT(RIDE_ID) NUM_RIDES FROM bike_share.DBO.allrides
GROUP BY MEMBER_CASUAL, rideable_type, WeekDay
ORDER BY NUM_RIDES DESC


--AMOUNT OF TRIPS BY MONTH
SELECT MonthName, COUNT(*) NUM_RIDES FROM bike_share.DBO.allrides
GROUP BY MonthName
ORDER BY NUM_RIDES

--AMOUNT OF TRIPS BY MONTH AND RIDE TYPE
SELECT  RIDEABLE_TYPE AS RIDE_TYPE , MonthName, COUNT(RIDE_ID) NUM_RIDES FROM bike_share.DBO.allrides
GROUP BY  rideable_type, MonthName
ORDER BY NUM_RIDES DESC

--AMOUNT OF TRIPS BY QUARTER
SELECT Quarter, COUNT(RIDE_ID) NUM_RIDES FROM bike_share.DBO.allrides
GROUP BY Quarter
ORDER BY NUM_RIDES

--AMOUNT OF TRIPS BY MONTH AND RIDE TYPE
SELECT  RIDEABLE_TYPE AS RIDE_TYPE , Quarter, COUNT(RIDE_ID) NUM_RIDES FROM bike_share.DBO.allrides
GROUP BY  rideable_type, Quarter
ORDER BY NUM_RIDES DESC

--AMOUNT OF TRIPS BY WEEKDAY, MONTHNAME , QUARTER, MEMBER TYPE AND RIDE TYPE
SELECT MEMBER_CASUAL, RIDEABLE_TYPE AS RIDE_TYPE,WeekDay ,MonthName, Quarter, COUNT(RIDE_ID) NUM_RIDES FROM bike_share.DBO.allrides
GROUP BY member_casual, WeekDay, MonthName, Quarter,  rideable_type, Quarter
ORDER BY NUM_RIDES DESC

